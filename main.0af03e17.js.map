{"version":3,"sources":["scripts/main.js"],"names":["sortCol","body","document","querySelector","table","tableBody","headers","querySelectorAll","rows","form","createElement","options","sortAsc","convertToNumber","str","slice","split","join","convertToString","numb","date","toLocaleString","String","concat","forEach","call","header","index","addEventListener","sortColumn","item","e","curr","target","closest","row","className","newRows","Array","from","sort","rowA","rowB","cellA","innerText","cellB","Number","isNaN","localeCompare","newRow","appendChild","classList","add","innerHTML","append","button","events","preventDefault","input","names","getElementById","value","salary","age","office","pos","length","pushNotification","field","title","description","type","element","elTitle","elPar","dataset","qa","setTimeout","remove","tagName","cellText","textContent","newInput","cellIndex","insertAdjacentHTML","firstChild","replaceWith","checker","notification","contains","ev","code"],"mappings":"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","file":"main.0af03e17.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst table = body.querySelector('table');\nconst tableBody = table.querySelector('tbody');\nconst headers = table.querySelectorAll('th');\nconst rows = tableBody.querySelectorAll('tr');\nconst form = document.createElement('form');\nconst options = `<label for=\"office\">Office:\n<select id=\"office\" required>\n  <option>Tokyo</option>\n  <option>Singapore</option>\n  <option>London</option>\n  <option>New York</option>\n  <option>Edinburgh</option>\n  <option>San Francisco</option>\n</select>\n</label>`;\nlet sortCol;\nlet sortAsc = false;\n\n[].forEach.call(headers, (header, index) => {\n  header.addEventListener('click', () => {\n    sortColumn(index, false);\n  });\n});\n\n[].forEach.call(rows, (item) => {\n  item.addEventListener('click', (e) => {\n    const curr = e.target.closest('tr');\n\n    rows.forEach(row => {\n      row === curr ? row.className = 'active' : row.className = '';\n    });\n  });\n});\n\nfunction convertToNumber(str) {\n  return +str.slice(1).split(',').join('');\n};\n\nfunction convertToString(numb) {\n  const date = numb.toLocaleString('en-US');\n  const str = String(date);\n  const string = '$';\n\n  return [...string].concat(str).join('');\n};\n\nconst sortColumn = (index) => {\n  const thisSort = index;\n\n  if (sortCol === thisSort) {\n    sortAsc = !sortAsc;\n  }\n\n  sortCol = thisSort;\n\n  const newRows = Array.from(tableBody.rows);\n\n  newRows.sort((rowA, rowB) => {\n    const cellA = rowA.querySelectorAll('td')[index].innerText;\n    const cellB = rowB.querySelectorAll('td')[index].innerText;\n\n    if (Number.isNaN(+cellA)) {\n      if (cellA[0] === '$') {\n        return sortAsc\n          ? convertToNumber(cellA) - convertToNumber(cellB)\n          : convertToNumber(cellB) - convertToNumber(cellA);\n      }\n\n      return sortAsc\n        ? cellA.localeCompare(cellB)\n        : cellB.localeCompare(cellA);\n    } else {\n      return sortAsc\n        ? cellA - cellB\n        : cellB - cellA;\n    }\n  });\n\n  newRows.forEach((newRow) => {\n    tableBody.appendChild(newRow);\n  });\n};\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `\n  <form name=\"myForm\">\n  <label for=\"names\">Name:\n    <input name=\"name\" type=\"text\" id=\"names\" data-qa=\"Name\" required>\n  </label>\n  <label for=\"pos\">Position:\n     <input name=\"position\" type=\"text\" id=\"pos\" data-qa=\"Position\" required>\n   </label>\n    <label for=\"office\">Office:\n      <select id=\"office\" required>\n        <option>Tokyo</option>\n        <option>Singapore</option>\n        <option>London</option>\n        <option>New York</option>\n        <option>Edinburgh</option>\n        <option>San Francisco</option>\n      </select>\n    </label>\n  <label for=\"age\">Age:\n    <input name=\"age\" type=\"number\" min=\"0\" id=\"age\" data-qa=\"Age\" required>\n  </label>\n  <label for=\"salary\">Salary:\n     <input \n      name=\"salary\" \n      type=\"number\" \n      id=\"salary\" \n      data-qa=\"Salary\" \n      min=\"0\"\n      required>\n   </label>\n\n  <button class=\"submit\" name=\"submit\">Save to table</button>\n  </form>\n`;\nbody.append(form);\n\nconst button = document.querySelector('.submit');\n\nbutton.addEventListener('click', (events) => {\n  events.preventDefault();\n\n  const input = document.querySelectorAll('input');\n  const newRow = document.createElement('tr');\n  const names = document.getElementById('names').value;\n  const salary = document.getElementById('salary').value;\n  const age = document.getElementById('age').value;\n  const office = document.getElementById('office').value;\n  const pos = document.getElementById('pos').value;\n\n  if (names.length < 4) {\n    pushNotification('Error', 'Name Min. length is 4 letters', 'error');\n\n    return;\n  };\n\n  if (pos.length <= 1) {\n    pushNotification('Error', 'Position shouldn`t empty', 'error');\n\n    return;\n  };\n\n  if (age < 18 || age > 90) {\n    pushNotification('Error', 'Age should be from 18 to 90', 'error');\n\n    return;\n  }\n\n  if (salary === '') {\n    pushNotification('Error', 'Salary shouldn`t empty', 'error');\n\n    return;\n  };\n\n  newRow.innerHTML = `\n  <tr>\n    <td>${names}</td>\n    <td>${pos}</td>\n    <td>${office}</td>\n    <td>${String(age)}</td>\n    <td>${convertToString(+salary)}</td>\n  </tr>\n  `;\n  tableBody.append(newRow);\n\n  pushNotification('Success', 'New employee was added', 'success');\n\n  input.forEach(field => {\n    field.value = '';\n  });\n\n  sortColumn();\n});\n\nconst pushNotification = (title, description, type) => {\n  const element = document.createElement('div');\n  const elTitle = document.createElement('h2');\n  const elPar = document.createElement('p');\n\n  element.classList.add(type, 'notification');\n  element.dataset.qa = 'notification';\n\n  elTitle.classList.add('title');\n  elTitle.innerHTML = title;\n\n  elPar.innerHTML = description;\n\n  element.append(elTitle, elPar);\n\n  document.body.append(element);\n\n  setTimeout(() => {\n    element.remove();\n  }, 3000);\n};\n\ntable.addEventListener('dblclick', e => {\n  if (e.target.tagName !== 'TD') {\n    return;\n  };\n\n  if (table.querySelectorAll('.cell-input').length >= 1) {\n    return;\n  }\n\n  const cellText = e.target.textContent;\n  const newInput = e.target.cellIndex === 2\n    ? document.createElement('select')\n    : document.createElement('input');\n\n  if (newInput.tagName === 'SELECT') {\n    newInput.insertAdjacentHTML('afterbegin', options);\n  };\n\n  newInput.value = cellText;\n  newInput.classList.add('cell-input');\n\n  e.target.firstChild.replaceWith(newInput);\n\n  const checker = function() {\n    const notification = document.body.querySelector('.notification');\n\n    if (document.body.contains(notification)) {\n      notification.remove();\n    };\n\n    if (e.target.cellIndex === 0 || e.target.cellIndex === 1) {\n      if (newInput.value.length < 4) {\n        newInput.replaceWith(cellText);\n\n        pushNotification('Error', 'Min. length is 4 letters', 'error');\n      };\n\n      if (newInput.value && !isNaN(newInput.value)) {\n        newInput.replaceWith(cellText);\n\n        pushNotification('Error', 'Mustn`t be a number', 'error');\n      };\n    };\n\n    if (e.target.cellIndex === 3) {\n      if (isNaN(newInput.value)) {\n        newInput.replaceWith(cellText);\n\n        pushNotification('Erorr', 'Please, enter the number', 'error');\n      };\n\n      if (newInput.value < 18 || newInput.value > 90) {\n        newInput.replaceWith(cellText);\n\n        pushNotification('Erorr', 'Age only from 18 to 90', 'error');\n      }\n    };\n\n    if (e.target.cellIndex === 4) {\n      if (isNaN(newInput.value)) {\n        newInput.replaceWith(cellText);\n\n        pushNotification('Erorr', 'Only numbers please', 'error');\n      }\n\n      newInput.replaceWith(`$${(+newInput.value).toLocaleString('en-US')}`);\n    };\n\n    newInput.replaceWith(newInput.value);\n  };\n\n  newInput.addEventListener('blur', () => {\n    checker();\n  });\n\n  newInput.addEventListener('keydown', ev => {\n    if (ev.code === 'Enter') {\n      checker();\n    }\n  });\n});\n"]}